name: Kadvisor-pipeline

on: [push]

jobs:
    build-client:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [14.15.1]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Set-local-env
              run: echo NX_APP_DOMAIN=${{secrets.API_HOST}} >> client/apps/kadvisor-app/.local.env

            - name: Instal node_modules
              working-directory: ./client
              run: npm install

            - name: Check-format
              working-directory: ./client
              run: npm run format:check

            - name: Build
              working-directory: ./client
              run: npm run build:prod

            - name: Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: dist
                  path: ./client/dist
                  retention-days: 5

    test-client:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [14.15.1]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install Nx
              working-directory: ./client
              run: npm install -g nx

            - name: Instal node_modules
              working-directory: ./client
              run: npm install

            - name: Test
              working-directory: ./client
              run: nx test kadvisor-app

    build-server:
        runs-on: ubuntu-latest
        needs: build-client

        strategy:
            matrix:
                go-version: [1.14.4]

        steps:
            - uses: actions/checkout@v2

            - name: Download client artifact
              uses: actions/download-artifact@v1
              with:
                  name: 'dist'
                  path: ./client/dist

            - name: 'Verify Artifact'
              run: |
                  $file = "client/dist/apps/kadvisor-app/index.html"
                  if(!(Test-Path -path $file))
                  {
                      Write-Error "Expected file does not exist"
                  }
              shell: pwsh

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Build
              run: go build

            - name: Artifact
              uses: actions/upload-artifact@v2
              with:
                  name: kadvisor
                  path: ./kadvisor
                  retention-days: 5

    test-server:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                go-version: [1.14.4]

        steps:
            - uses: actions/checkout@v2

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Get dependencies
              run: |
                  go get -v github.com/onsi/ginkgo/ginkgo 
                  go get -v github.com/golang/mock/gomock
                  go get -v github.com/golang/mock/mockgen
                  go mod download
                  export PATH=$PATH:$HOME/gopath/bin

            - name: Generate mocks
              run: (cd server/repository/interfaces/ && go generate)

            - name: Test
              run: ginkgo -r --randomizeAllSpecs --randomizeSuites --failOnPending --cover --trace --race --compilers=2

    docker:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/master'
        steps:
            - name: Docker
              run: echo "ADD DEPLOYMENT JOB"
