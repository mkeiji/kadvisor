image: golang

stages:
    - build
    - docker
    - deploy

build-client:
   stage: build
   image: node
   artifacts:
        paths:
            - client/dist
   script:
        - echo NX_APP_DOMAIN=$API_HOST >> client/apps/kadvisor-app/.local.env
        - cd client/
        - npm install
        - npm run format:check
        - npm run build:prod


build-server:
    stage: build
    image: mgkeiji/gogcc
    artifacts:
        paths:
            - kadvisor
    script:
        - go build

docker:
    stage: docker
    only:
        - master
    image: docker:19.03.12
    services:
        - docker:19.03.12-dind
    script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker build -t registry.gitlab.com/keijidev/kadvisor:latest .
        - docker push registry.gitlab.com/keijidev/kadvisor:latest

deploy:
    stage: deploy
    only:
        - master
    image: alpine:latest
    before_script:
        - apk add openssh-client
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - ssh-keyscan $K_SERVER >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts

    script:
        - ssh -T -o StrictHostKeyChecking=no $K_USER@$K_SERVER '
            cd ~/krepos/dev_ops/docker/docker-compose-orchestration &&
            docker-compose pull kadvisor &&
            docker-compose up -d kadvisor &&
            exit
         '
